# Builds docker image useful for CI pipeline testing; see `.gitlab-ci.yml`.
# Meant to sit atop the image produced by Dockerfile.

FROM gips-base

ENV GIPS_OVERRIDE_VERSION='0.0.0-dev'

COPY docker/pytest-ini /gips/pytest.ini

RUN pip3 install -r dev_requirements.txt

# once hls is compatible with the gips ORM, this line can be removed:
RUN echo 'GIPS_ORM = False' >> /gips/gips/settings.py

### fetch tests:
# Previously, the CI test suite did fetch tests and needed auth creds, and also
# used to politely set a user that would be convenient for developers (so you
# could set it to use your own UID and thus avoid cluttering your mounted
# developer directory with root-owned .pyc files etc). Also, the decryption
# bits don't seem to work at the moment.
#COPY gitlab_ci /root/.ssh/gitlab_ci
#COPY gips_creds.sh.enc /root/gips_creds.sh.enc
#RUN cd /gips \
#    && openssl enc -d -aes-256-ctr -in /root/gips_creds.sh.enc -out gips_creds.sh \
#        -pass file:/root/.ssh/gitlab_ci \
#    && eval $(cat gips_creds.sh) \
#    && sed -i~ \
#     -e "s/^EARTHDATA_USER.*/EARTHDATA_USER = \"${EARTHDATA_USER}\"/" \
#     -e "s/^EARTHDATA_PASS.*/EARTHDATA_PASS = \"${EARTHDATA_PASS}\"/" \
#     -e "s/^USGS_USER.*/USGS_USER = \"${USGS_USER}\"/" \
#     -e "s/^USGS_PASS.*/USGS_PASS = \"${USGS_PASS}\"/" \
#     -e "s/^ESA_USER.*/ESA_USER = \"${ESA_USER}\"/" \
#     -e "s/^ESA_PASS.*/ESA_PASS = \"${ESA_PASS}\"/" /gips/gips/settings.py \
#    && groupadd -g $GIPS_UID gips \
#    && useradd -m -r -u $GIPS_UID -g gips gips \
#    && chown -R gips:gips /gips /archive
